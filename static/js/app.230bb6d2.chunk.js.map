{"version":3,"sources":["src/providers/app.provider.tsx","src/services/stock.service.ts","src/components/push-notifications/push-notifications.component.tsx","src/components/intraday-stocks/stocks.component.tsx","src/components/intraday-stocks/intraday-stocks.component.tsx","src/screens/home/home.component.tsx","src/components/intraday-stocks/stock-details/stock-details.component.tsx","src/screens/stock-details/stock-details.component.tsx","src/components/intraday-stocks/swing-stocks.component.tsx","src/components/intraday-stocks/intraday-log.component.tsx","src/screens/swing-slots/swing-slots.component.tsx","src/screens/swing-slots/new-slot.component.tsx","src/screens/swing-slots/transactions.component.tsx","AppNavigation.component.tsx","App.tsx","web-build/register-service-worker.js","node_modules/moment/locale sync /^/.*$"],"names":["AppContext","createContext","intradayStocks","setIntradayStocks","swingStocks","setSwingStocks","selectedStock","setSelectedStock","config","setConfig","savedTrade","setSavedTrade","AppProvider","children","useState","Provider","value","apiUrl","Constants","manifest","extra","getNotifications","type","offSet","limit","axios","get","then","x","data","registerPush","expoPushToken","console","log","post","getSwingExecute","order","PushNotifications","useEffect","registerForPushNotificationsAsync","Notifications","addListener","handleNotification","setExpoPushToken","notification","setNotification","useContext","a","async","isDevice","Permissions","existingStatus","status","finalStatus","alert","getExpoPushTokenAsync","token","catch","e","Platform","OS","createChannelAndroidAsync","name","sound","priority","vibrate","JSON","stringify","Vibration","prev","Stocks","stocks","fetchData","navigation","useNavigation","refreshing","setRefreshing","refreshControl","RefreshControl","onRefresh","map","stock","index","key","TouchableOpacity","onPress","navigate","goodOne","valid","Ionicons","size","style","color","trend","fontSize","symbol","currentPrice","moment","createDt","format","invalidReason","lastCandelIsGreen","Feather","IntradayStocks","StyleSheet","create","centeredView","flex","justifyContent","alignItems","marginTop","modalView","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","openButton","textStyle","fontWeight","textAlign","modalText","marginBottom","loading","setLoading","resp","finally","Home","buttonStyle","flexDirection","flexGrow","StockDetails","labels","datasets","setData","dataTrend","setDataTrend","chart","options","zoom","enabled","dataLabels","stroke","curve","grid","row","colors","opacity","xaxis","categories","bar","setBarData","highestHigh","lowestLow","high","low","highestHighIndex","lowestLowIndex","highIndex","lowIndex","trendLine","indexes","Math","min","max","sort","y","final","i","push","avgCandelSize","allowedCandelSize","todayCandelSize","getData","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","r","strokeWidth","flexWrap","marginVertical","fromZero","Dimensions","yAxisLabel","yAxisSuffix","yAxisInterval","StockDetailsHome","segment","setSegment","quantity","buyCost","slCost","targetCost","expectedProfit","maximumLoss","result","setResult","buyPrice","stoploss","target","formValues","setFormValues","freezeQty","setFreezeQty","orderInfo","setOrderInfo","calculateQuantity","freezeQty1","gap","abs","maximumLossAmount","intradayRiskAmount","round","tradeSaved","find","tradeInfo","orderPrice","sl1","sync","values","saved","filter","newSavedTrade","active","first","last","initialValues","validate","errors","onSubmit","setSubmitting","setTimeout","touched","handleChange","handleBlur","setValues","handleSubmit","isSubmitting","onChange","floatingLabel","keyboardType","onChangeText","onBlur","toString","onValueChange","toFixed","alignSelf","disabled","dto","transaction_type","price","sl","res","SwingStocks","IntradayLogs","setStocks","route","slots","setSlots","url","getSlots","header","noOfSlotsArr","noOfSlots","length","reduce","getSlotsCount","balancedAmount","avatar","note","investedAmount","createdOn","qty","NewSlot","force","forceQty","state","setState","params","stackedLabel","checked","resCode","Toast","show","text","buttonText","marginLeft","trasactions","setTransactions","Date","date","getTime","Stack","createStackNavigator","AppNavigation","NavigationContainer","Navigator","initialRouteName","Screen","component","SwingSlots","Transactions","App","isReady","setIsReady","Font","Roboto","require","Roboto_medium","font","AppLoading","navigator","window","addEventListener","serviceWorker","register","scope","info","error","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/app.230bb6d2.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const AppContext = createContext<{\n  intradayStocks: any;\n  setIntradayStocks: (intradayStocks: any) => void;\n  swingStocks: any;\n  setSwingStocks: (intradayStocks: any) => void;\n\n  selectedStock: any;\n  setSelectedStock: (selectedStock: any) => void;\n  config: any;\n  setConfig: (config: any) => void;\n\n  savedTrade: any;\n  setSavedTrade: (savedTrade: any) => void;\n}>({\n  intradayStocks: [],\n  setIntradayStocks: (intradayStocks: any) => {},\n  swingStocks: [],\n  setSwingStocks: (intradayStocks: any) => {},\n  selectedStock: null,\n  setSelectedStock: (selectedStock: any) => {},\n  config: null,\n  setConfig: (config: any) => {},\n\n  savedTrade: [],\n  setSavedTrade: (savedTrade: any) => {},\n});\n\nconst AppProvider = ({ children }: any) => {\n  const [intradayStocks, setIntradayStocks]: any = useState([]);\n  const [config, setConfig]: any = useState();\n  const [swingStocks, setSwingStocks]: any = useState([]);\n  const [selectedStock, setSelectedStock] = useState<any>();\n  const [savedTrade, setSavedTrade] = useState<any>([]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        intradayStocks,\n        setIntradayStocks,\n        selectedStock,\n        setSelectedStock,\n        swingStocks,\n        setSwingStocks,\n        config,\n        setConfig,\n        savedTrade,\n        setSavedTrade,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppProvider;\n","import axios from 'axios';\nimport Constants from 'expo-constants';\n\nconst { apiUrl } = Constants.manifest.extra;\n\nexport const getNotifications = (type: string, offSet?: string, limit: number = 10) => {\n  return axios.get(`${apiUrl}/notifications?type=${type}${offSet ? `&limit=${limit}&offSet=${offSet}` : \"\"}`).then(x => x.data);\n}\nexport const getConfig = () => {\n  return axios.get(`${apiUrl}/appConfig`).then(x => x.data);\n}\n\n\n\nexport const getSlots = () => {\n  const url = `${apiUrl}/swing/v2/slots`;\n  console.log(url)\n  return axios.get(url).then(x => x.data);\n}\n\n\nexport const registerPush = (expoPushToken: string) => {\n  console.log(`${apiUrl}/registerPush`)\n\n  return axios.post(`${apiUrl}/registerPush`, { expoPushToken });\n}\n\nexport const placeOrder = (order: { symbol: string, transaction_type: string, quantity: number, price: number, sl: number, target: number }) => {\n\n  return axios.post(`${apiUrl}/kite/order`, { ...order });\n}\n\nexport const pushOnApp = () => {\n  return axios.get(`${apiUrl}/pushOnApp`).then(x => x.data);\n}\n\nexport const getSwingExecute = (order: { symbol: string, orderPrice: number, force: boolean, forceQty: number }) => {\n\n  return axios.post(`${apiUrl}/swing/v2/execute`, { ...order });\n}\nexport const getSwingExecuteOut = (order: { symbol: string, orderPrice: number }) => {\n\n  return axios.post(`${apiUrl}/swing/v2/executeOut`, { ...order });\n}\n\nexport const getTransactions = () => {\n\n  return axios.get(`${apiUrl}/swing/v2/transactions`).then(x => x.data);\n}\n\n\n\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Notifications } from \"expo\";\nimport Constants from 'expo-constants'\nimport * as Permissions from \"expo-permissions\";\nimport { Platform, Vibration } from \"react-native\";\nimport { registerPush } from \"../../services/stock.service\";\nimport { AppContext } from \"../../providers/app.provider\";\nconst PushNotifications = () => {\n  let _notificationSubscription;\n\n  useEffect(() => {\n    registerForPushNotificationsAsync().then((x) => {\n      console.log(\"Registered completed\");\n    });\n\n    _notificationSubscription = Notifications.addListener(handleNotification);\n  }, []);\n\n  const [expoPushToken, setExpoPushToken] = useState(\"\");\n\n  const [notification, setNotification] = useState<any>({});\n\n  const { setIntradayStocks, setSwingStocks } = useContext(AppContext);\n\n  const registerForPushNotificationsAsync = async () => {\n    try {\n      if (Constants.isDevice) {\n        const { status: existingStatus } = await Permissions.getAsync(\n          Permissions.NOTIFICATIONS\n        );\n        let finalStatus = existingStatus;\n        if (existingStatus !== \"granted\") {\n          const { status } = await Permissions.askAsync(\n            Permissions.NOTIFICATIONS\n          );\n          finalStatus = status;\n        }\n\n        if (finalStatus !== \"granted\") {\n          alert(\"Failed to get push token for push notification!\");\n          return;\n        }\n\n        const token = await Notifications.getExpoPushTokenAsync();\n\n       \n        console.log(token);\n        setExpoPushToken(token);\n\n        await registerPush(token).catch((e) => {\n          alert(\"Failed to register push notifications.\");\n        });\n\n        console.log(\"Registered for push notificatios\");\n      } else {\n        alert(\"Must use physical device for Push Notifications\");\n      }\n\n      if (Platform.OS === \"android\") {\n        Notifications.createChannelAndroidAsync(\"default\", {\n          name: \"default\",\n          sound: true,\n          priority: \"max\",\n          vibrate: [0, 250, 250, 250, 0, 250, 250, 250],\n        });\n      }\n    } catch (error) {\n      console.log(JSON.stringify(error, null, 2));\n    }\n  };\n\n  const handleNotification = (notification: any) => {\n    Vibration.vibrate(3);\n    console.log(notification);\n    setNotification(notification);\n  };\n\n  useEffect(() => {\n    if (notification && notification.data) {\n      if ((notification.data.data && notification.data.data.type === \"swing\")) {\n        setSwingStocks((prev: any) => [notification.data.data, ...prev]);\n      } else {\n        setIntradayStocks((prev: any) => [notification.data.data, ...prev]);\n      }\n    }\n  }, [notification]);\n  return null;\n};\nexport default PushNotifications;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { getNotifications } from \"../../services/stock.service\";\nimport {\n  Container,\n  Content,\n  List,\n  ListItem,\n  Text,\n  View,\n  Button,\n  Left,\n  Right,\n  Icon,\n} from \"native-base\";\n\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Feather } from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport {\n  TouchableOpacity,\n  Modal,\n  Alert,\n  StyleSheet,\n  TouchableHighlight,\n  RefreshControl,\n} from \"react-native\";\nimport { AppContext } from \"../../providers/app.provider\";\nimport { useNavigation } from \"@react-navigation/native\";\nconst Stocks = ({ stocks,fetchData }: any) => {\n  const navigation = useNavigation();\n  const { setSelectedStock } = useContext(AppContext);\n  const [refreshing, setRefreshing] = useState(false);\n\n  return (\n    <Container>\n      <Content\n       refreshControl={\n        <RefreshControl\n          refreshing={refreshing}\n          onRefresh={() => {\n            setRefreshing(true);\n            fetchData();\n            setRefreshing(false);\n          }}\n        />\n      }\n      >\n      \n        <List>\n        \n          {stocks &&\n            stocks.map((stock: any, index: number) => (\n              <ListItem key={index}>\n                {stock && \n                <>\n                <Left>\n                  <TouchableOpacity\n                    onPress={() => {\n                      setSelectedStock(stock);\n\n                      navigation.navigate(\"Stock\");\n                    }}\n                  >\n                    <Text>\n                      {stock.goodOne && stock.valid && (\n                        //   <LikeTwoTone style={{ color: \"#5fe48a\" }} />\n                        // )\n\n                        <Ionicons name=\"md-thumbs-up\" size={24} />\n                      )}{\" \"}\n                      <Text\n                        style={{\n                          color: stock.trend === \"DOWN\" ? \"red\" : \"green\",\n                          fontSize: 20,\n                        }}\n                      >\n                        {stock.symbol}\n                      </Text>\n                      {stock.currentPrice}\n                      {\"\\n\"}\n                      <Text style={{ fontSize: 12 }}>\n                        on {moment(stock.createDt).format(\"DD MMM YYYY h:mm a\")}\n                      </Text>{\" \"}\n                      {\"\\n\"}\n                      {!stock.valid && stock.invalidReason && (\n                        <>\n                          <Text style={{ color: \"red\" }}>\n                            {stock.invalidReason} \n                          </Text>\n                        </>\n                      )}\n                    </Text>\n                  </TouchableOpacity>\n                </Left>\n                <Right>\n                  {((stock.lastCandelIsGreen && stock.trend === \"UP\") ||\n                    (!stock.lastCandelIsGreen && stock.trend === \"DOWN\")) && (\n                    <Feather name=\"sliders\" size={24} color=\"black\" />\n                  )}\n                </Right>\n                </>\n                \n                }\n                \n              </ListItem>\n            ))}\n        </List>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Stocks;\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n  },\n});\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Stocks from \"./stocks.component\";\nimport { AppContext } from \"../../providers/app.provider\";\nimport { getNotifications } from \"../../services/stock.service\";\nimport { Spinner, View,Text } from \"native-base\";\n\nconst IntradayStocks = () => {\n  const {\n    intradayStocks,\n \n    setIntradayStocks,\n  \n  } = useContext(AppContext);\n  const [loading, setLoading] = useState(false);\n \n \n  const fetchData = ()=>{\n    setLoading(true);\n    getNotifications(\"intraday\").then((resp) => {\n      console.log('Data',resp.data)\n      if (resp) {\n        setIntradayStocks(resp.data);\n      }\n    }).finally(()=> setLoading(false));\n  }\n  \n    useEffect(() => {\n      fetchData();\n    }, []);\n\n  return <View style={{width:'100%'}}> \n   \n          \n    {loading ?\n    <Spinner  color='blue'  />  : \n     <Stocks  stocks={intradayStocks} fetchData={fetchData} />\n       }\n     </View>\n};\n\nexport default IntradayStocks;\n","import React, { useContext, useEffect } from \"react\";\n\nimport { Container, Tabs, Tab, View, Button,Text } from \"native-base\";\nimport IntradayStocks from \"../../components/intraday-stocks/intraday-stocks.component\";\n\nimport {  pushOnApp, getNotifications } from \"../../services/stock.service\";\nimport { AppContext } from \"../../providers/app.provider\";\nimport Stocks from \"../../components/intraday-stocks/stocks.component\";\nimport SwingStocks from \"../../components/intraday-stocks/swing-stocks.component\";\nimport SwingSlots from \"../swing-slots/swing-slots.component\";\nimport IntradayLogs from \"../../components/intraday-stocks/intraday-log.component\";\n\nconst Home = ({ navigation }: any) => {\n  const sendPushNotification = () => {\n    pushOnApp().then((x) => {\n      console.log(x);\n    });\n  };\n\n  const buttonStyle= {\n    margin:10\n  }\n\n  return (\n     \n    <Container>\n       <View style={{ height:'100%'}}>\n       <View style={{ flexDirection: \"row\",  justifyContent: 'center'  }}>\n       <Button  style={buttonStyle} onPress={()=>{navigation.navigate('Swing')}}><Text>Swing</Text></Button> \n       <Button style={buttonStyle} onPress={()=>{navigation.navigate('Logs')}}><Text>Intraday Logs</Text></Button> \n       <Button style={buttonStyle} onPress={()=>{navigation.navigate('Slots')}}><Text>Slots</Text></Button> \n       </View>\n       <View  style={{ flexDirection: \"row\",flexGrow:1 , justifyContent: 'center' }}>\n        <IntradayStocks />\n        </View>\n       </View>\n        \n    </Container>\n   \n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { View, Text, Grid, Col } from \"native-base\";\n\nimport { LineChart, BarChart, ChartConfig } from \"react-native-chart-kit\";\nimport { Dimensions } from \"react-native\";\nconst StockDetails = ({ stock }: any) => {\n  const [loading, setLoading] = useState(true);\n\n  const [data, setData] = useState({\n    labels: [\"1\", \"2\", \"3\", \"4\", \"5\"],\n    datasets: [\n      {\n        data: [0, 0, 0, 0],\n      },\n    ],\n  });\n  const [dataTrend, setDataTrend] = useState({\n    labels: [\"1\", \"2\", \"3\", \"4\", \"5\"],\n    datasets: [\n      {\n        data: [0, 0, 0, 0],\n      },\n    ],\n  });\n\n  const chart = {\n    options: {\n      chart: {\n        height: 350,\n        type: \"line\",\n        zoom: {\n          enabled: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: \"straight\",\n      },\n\n      grid: {\n        row: {\n          colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\n          opacity: 0.5,\n        },\n      },\n      xaxis: {\n        categories: [1, 2, 3, 4],\n      },\n    },\n  };\n\n  const colors = [\"#5fa3f0\", \"#f0e15f\", \"#5fe48a\"];\n  const [bar, setBarData] = useState({\n    labels: [\"Avarage\", \"Allowed\", \"Today\"],\n    datasets: [\n      {\n        data: [0, 0, 0],\n      },\n    ],\n  });\n\n  useEffect(() => {\n    const getData = async () => {\n      if (stock) {\n        setLoading(false);\n        const {\n          highestHigh,\n          lowestLow,\n          high,\n          low,\n          highestHighIndex,\n          lowestLowIndex,\n          highIndex,\n          lowIndex,\n          currentPrice,\n          trend,\n          trendLine\n        } = stock;\n        let indexes: number[] = [\n          highestHighIndex,\n          lowestLowIndex,\n          highIndex,\n          lowIndex,\n        ];\n\n        const startIndex = Math.min(...indexes);\n        const endIndex = Math.max(...indexes);\n\n        indexes = indexes.sort((x, y) => x - y);\n\n        const final: any[] = [];\n        for (const i of indexes) {\n          if (highestHighIndex === i) {\n            final.push(highestHigh);\n          } else if (lowestLowIndex === i) {\n            final.push(lowestLow);\n          } else if (lowIndex === i) {\n            final.push(low);\n          } else if (highIndex === i) {\n            final.push(high);\n          }\n        }\n\n        final.push(currentPrice);\n\n        let labels = [\n          `LL(${lowestLow})`,\n          `H(${high})`,\n          `L(${low})`,\n          `HH(${highestHigh})`,\n          `C(${currentPrice})`,\n        ];\n\n        if (trend === \"DOWN\") {\n          labels = [\n            `HH (${highestHigh})`,\n            `L (${low})`,\n            `H (${high})`,\n            `LL (${lowestLow})`,\n            `Current (${currentPrice})`,\n          ];\n        }\n\n        setData({\n          labels: labels,\n          datasets: [\n            {\n              data: final,\n            },\n          ],\n        });\n\n        setDataTrend({\n          labels: labels,\n          datasets: [\n            {\n              data: trendLine,\n            },\n          ],\n        });\n\n        setBarData({\n          labels: [\n            `Avarage (${stock.avgCandelSize})`,\n            `Allowed (${stock.allowedCandelSize})`,\n            `Today (${stock.todayCandelSize})`,\n          ],\n          datasets: [\n            {\n              data: [\n                stock.avgCandelSize,\n                stock.allowedCandelSize,\n                stock.todayCandelSize,\n              ],\n            },\n          ],\n        });\n      }\n    };\n    getData();\n  }, [stock]);\n\n  const data1 = {\n    labels: [\"Avarage\", \"Allowed\", \"Today\"],\n    datasets: [\n      {\n        data: [123, 45, 28],\n      },\n    ],\n  };\n\n  const chartConfig: ChartConfig = {\n    backgroundColor: \"red\",\n    backgroundGradientFrom: \"#05052F\",\n    backgroundGradientTo: \"#FFF\",\n    decimalPlaces: 2, // optional, defaults to 2dp\n    color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n    labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n    style: {\n      borderRadius: 5,\n    },\n    propsForDots: {\n      r: \"2\",\n      strokeWidth: \"2\",\n      stroke: \"#fff\",\n\n    },\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n        flexWrap: \"wrap\",\n        padding: 10,\n      }}\n    >\n      {stock.type !== \"priceaction\" &&\n        <BarChart\n          style={{\n            marginVertical: 8,\n            borderRadius: 5,\n          }}\n          fromZero\n          data={bar}\n          width={Dimensions.get(\"window\").width - 15}\n          height={220}\n          chartConfig={chartConfig}\n        />\n      }\n\n      {chart && data && (\n        //    <Chart\n        //   options={options}\n        //   series={series}\n        //   type=\"bar\"\n        //   width=\"500\"\n        // />\n        <LineChart\n          data={data}\n          width={Dimensions.get(\"window\").width - 15} // from react-native\n          height={220}\n          yAxisLabel=\"₹\"\n          yAxisSuffix=\"\"\n          yAxisInterval={1} // optional, defaults to 1\n          chartConfig={chartConfig}\n          style={{\n            marginVertical: 8,\n            borderRadius: 5,\n          }}\n        />\n      )}\n\n      {chart && dataTrend && (\n        <LineChart\n          data={dataTrend}\n          width={Dimensions.get(\"window\").width - 15} // from react-native\n          height={220}\n          yAxisLabel=\"₹\"\n          yAxisSuffix=\"\"\n          yAxisInterval={1} // optional, defaults to 1\n          chartConfig={chartConfig}\n          style={{\n            marginVertical: 8,\n            borderRadius: 5,\n          }}\n        />\n      )}\n    </View>\n  );\n};\nexport default StockDetails;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  Container,\n  Header,\n  Left,\n  Body,\n  Right,\n  Button,\n  Icon,\n  Segment,\n  Content,\n  Text,\n  View,\n  Form,\n  Item,\n  Label,\n  Input,\n  List,\n  ListItem,\n  Switch,\n} from \"native-base\";\nimport { Formik, useFormikContext } from \"formik\";\nimport { TouchableHighlight } from \"react-native\";\nimport StockDetails from \"../../components/intraday-stocks/stock-details/stock-details.component\";\nimport { AppContext } from \"../../providers/app.provider\";\nimport { placeOrder } from \"../../services/stock.service\";\n\nconst StockDetailsHome = ({ navigation }: any) => {\n  const {\n    selectedStock,\n    setSelectedStock,\n    config,\n    setSavedTrade,\n    savedTrade,\n  } = useContext(AppContext);\n\n  const [segment, setSegment] = useState(\"CHART\");\n\n  const [result, setResult] = useState<any>({\n    quantity: 0,\n    buyCost: 0,\n    slCost: 0,\n    targetCost: 0,\n    expectedProfit: 0,\n    maximumLoss: 0,\n  });\n\n  const [formValues, setFormValues] = useState({\n    buyPrice: selectedStock.currentPrice,\n    stoploss: selectedStock.currentPrice,\n    target: selectedStock.currentPrice,\n  });\n\n  const [freezeQty, setFreezeQty] = useState(false);\n  const [orderInfo, setOrderInfo] = useState({status:\"PENDING\"});\n  const calculateQuantity = ({\n    quantity,\n    buyPrice,\n    stoploss,\n    target,\n    freezeQty1,\n  }: any) => {\n    if (!freezeQty1) {\n      const gap = Math.abs(buyPrice - stoploss);\n      const maximumLossAmount = config.intradayRiskAmount;\n      if (gap) {\n        quantity = Math.round(maximumLossAmount / gap);\n      }\n    }\n\n    const buyCost = buyPrice * quantity;\n    const slCost = stoploss * quantity;\n    const targetCost = target * quantity;\n\n    let trend = \"up\";\n    if (buyPrice > target) {\n      trend = \"down\";\n    }\n    let expectedProfit = targetCost - buyCost;\n    let maximumLoss = buyCost - slCost;\n\n    if (trend === \"down\") {\n      expectedProfit = buyCost - targetCost;\n      maximumLoss = slCost - buyCost;\n    }\n\n    setResult({\n      quantity,\n      buyCost,\n      slCost,\n      targetCost,\n      expectedProfit,\n      maximumLoss,\n    });\n  };\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const { quantity } = result;\n    calculateQuantity({ quantity, ...formValues, freezeQty1: freezeQty });\n  }, [formValues]);\n\n  useEffect(() => {\n    const tradeSaved =\n      savedTrade &&\n      savedTrade.find((x: any) => x.symbol === selectedStock.symbol);\n\n    let freeze = false;\n    if (tradeSaved) {\n      const { symbol, freezeQty, orderInfo, ...result } = tradeSaved;\n      freeze = freezeQty;\n      setFreezeQty(freezeQty);\n      setOrderInfo(orderInfo)\n      setFormValues(() => ({\n        buyPrice: result.buyPrice,\n        stoploss: result.stoploss,\n        target: result.target,\n      }));\n\n      setResult({ quantity: result.quantity });\n    } else {\n      if (selectedStock.tradeInfo) {\n        const { orderPrice, sl1, target } = selectedStock.tradeInfo;\n\n        setFormValues(() => ({\n          buyPrice: orderPrice,\n          stoploss: sl1,\n          target: target,\n        }));\n      }\n    }\n\n    // calculateQuantity({ ...formValues, quantity: result.quantity,freezeQty1:freeze});\n  }, []);\n\n  const sync = (values: any, freezeQty: boolean,orderInfo?:any) => {\n    const saved =\n      savedTrade &&\n      savedTrade.filter((x: any) => x.symbol !== selectedStock.symbol);\n\n      const newObject = {\n        ...values,\n        freezeQty,\n        quantity: result.quantity,\n        symbol: selectedStock.symbol,\n        orderInfo\n      };\n\n      const newSavedTrade = [newObject, ...saved];\n      setSavedTrade(newSavedTrade);\n\n  \n      \n    \n   \n  };\n  return (\n    <Container>\n      <Header >\n        <Body>\n        <Text\n                  style={{\n                  \n                    color: \"#fff\",\n                    fontSize: 20,\n                  }}\n                >\n                  {selectedStock.symbol}\n                </Text>\n        </Body>\n       \n        <Right>\n          <Segment>\n            <Button\n              active={segment === \"CHART\"}\n              first\n              onPress={() => setSegment(\"CHART\")}\n            >\n              <Text>Charts</Text>\n            </Button>\n            <Button\n              active={segment === \"CALC\"}\n              last\n              onPress={() => setSegment(\"CALC\")}\n            >\n              <Text>Calc</Text>\n            </Button>\n          </Segment>\n        </Right>\n      \n      </Header>\n      <Content>\n        {segment === \"CHART\" && (\n          <View>\n           \n            {selectedStock !== null && (\n              <>\n               \n                <StockDetails stock={selectedStock} />\n              </>\n            )}\n          </View>\n        )}\n\n        {segment === \"CALC\" && (\n          <View>\n            \n            <Content style={{ padding: 20 }}>\n              <Formik\n                initialValues={formValues}\n                validate={(values: any) => {\n                  const errors: any = {};\n                  if (!values.buyPrice) {\n                    errors.buyPrice = \"Required\";\n                  }\n                  if (!values.stoploss) {\n                    errors.stoploss = \"Required\";\n                  }\n                  return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                  setTimeout(() => {\n                    setFormValues(() => values);\n                    setSubmitting(false);\n                  }, 400);\n                }}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting,\n                  setValues,\n                  /* and other goodies */\n                }) => {\n                  const layout = {\n                    labelCol: { span: 8 },\n                    wrapperCol: { span: 16 },\n                  };\n\n                  const onChange = (name: string) => (e: any) => {\n                    setFormValues({\n                      ...formValues,\n                      [name]: e,\n                    });\n\n                    sync({ ...formValues, [name]: e }, freezeQty,orderInfo);\n\n                    return handleChange(name)(e);\n                  };\n                  return (\n                    <>\n                      <Form>\n                        <Item floatingLabel last>\n                          <Label>Buy Price</Label>\n                          <Input\n                            keyboardType=\"numeric\"\n                            onChangeText={onChange(\"buyPrice\")}\n                            onBlur={handleBlur(\"buyPrice\")}\n                            value={values.buyPrice.toString()}\n                          />\n                          {errors.buyPrice &&\n                            touched.buyPrice &&\n                            errors.buyPrice}\n                        </Item>\n                        <Item floatingLabel last>\n                          <Label>Stoploss</Label>\n                          <Input\n                            keyboardType=\"numeric\"\n                            onChangeText={onChange(\"stoploss\")}\n                            onBlur={handleBlur(\"stoploss\")}\n                            value={values.stoploss.toString()}\n                          />\n                          {errors.stoploss &&\n                            touched.stoploss &&\n                            errors.stoploss}\n                        </Item>\n\n                        <Item floatingLabel last>\n                          <Label>Target</Label>\n\n                          <Input\n                            keyboardType=\"numeric\"\n                            onChangeText={onChange(\"target\")}\n                            onBlur={handleBlur(\"target\")}\n                            value={values.target.toString()}\n                          />\n                          {errors.target && touched.target && errors.target}\n                        </Item>\n                      </Form>\n\n                      <List>\n                        <ListItem>\n                          <Text>Quantity:{result.quantity}</Text>\n                        </ListItem>\n                        <ListItem>\n                          <Left>\n                            <Text>Freeze Quantity</Text>\n                          </Left>\n                          <Body>\n                            <Switch\n                              value={freezeQty}\n                              onValueChange={() => {\n                                setFreezeQty(() => !freezeQty);\n                                calculateQuantity({\n                                  ...formValues,\n                                  quantity: result.quantity,\n                                  freezeQty1: !freezeQty,\n                                });\n\n                                sync(values, !freezeQty,orderInfo);\n                              }}\n                            />\n                          </Body>\n                        </ListItem>\n                        <ListItem>\n                          <Text>Amount:₹{result.buyCost.toFixed(2)}</Text>\n                        </ListItem>\n\n                        <ListItem>\n                          <Text>\n                            Expected Profit ₹{result.expectedProfit.toFixed(2)}\n                          </Text>\n                        </ListItem>\n                        <ListItem>\n                          <Text>\n                            Maximum Loss ₹{result.maximumLoss.toFixed(2)}\n                          </Text>\n                        </ListItem>\n                      </List>\n                      <Button\n                        style={{ alignSelf: \"center\", marginTop: 20 }}\n                        onPress={() => {\n                          setFormValues({\n                            buyPrice: selectedStock.currentPrice,\n                            stoploss: selectedStock.currentPrice,\n                            target: selectedStock.currentPrice,\n                          });\n                          setResult({\n                            quantity: 0,\n                            buyCost: 0,\n                            slCost: 0,\n                            targetCost: 0,\n                            expectedProfit: 0,\n                            maximumLoss: 0,\n                          });\n                          setFreezeQty(false);\n                          setValues({\n                            buyPrice: selectedStock.currentPrice,\n                            stoploss: selectedStock.currentPrice,\n                            target: selectedStock.currentPrice,\n                          });\n                        }}\n                      >\n                        <Text>Reset</Text>\n                      </Button>\n                      {orderInfo.status === \"PENDING\" && (\n                        <Button\n                          disabled={ !(!loading && freezeQty)}\n                          style={{ alignSelf: \"center\", marginTop: 20 }}\n                          onPress={async () => {\n                            setLoading(true);\n                            const dto = {\n                              symbol: selectedStock.symbol,\n                              transaction_type:\n                                selectedStock.trend === \"UP\" ? \"BUY\" : \"SELL\",\n                              price: +values.buyPrice,\n                              quantity: +result.quantity,\n                              sl: +values.stoploss,\n                              target: +values.target,\n                            }\n                            console.log('dto',dto)\n                            const res = await placeOrder(dto).catch((x) => {\n                              alert(\"Error in placing order.\");\n                              setLoading(false);\n                            });\n                            if (res && res.data && res.data.symbol) {\n                              alert(\"Order Placed.\");\n                              const orderInfo = {status:\"PLACED\"};\n                              setOrderInfo(orderInfo)\n                              sync(values, freezeQty,orderInfo);\n                            }\n                            setLoading(false);\n                          }}\n                        >\n                          <Text>Place Order</Text>\n                        </Button>\n                      )}\n\n                      {/* {result && (\n                        <Descriptions\n                          title={\n                            <div\n                              style={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"space-evenly\",\n                              }}\n                            >\n                              <span>Quantity:{result.quantity}</span>\n\n                              <Switch\n                                // style={{marginLeft:10}}\n                                checked={freezeQty}\n                                checkedChildren=\"Freezed\"\n                                unCheckedChildren=\"&nbsp;&nbsp;Unfreezed\"\n                                onChange={() => {\n                                  setFreezeQty(() => !freezeQty);\n                                  calculateQuantity();\n                                }}\n                              />\n\n                              <Button\n                                size=\"small\"\n                                onClick={() => {\n                                  setFormValues({\n                                    buyPrice: stockDetails.currentPrice,\n                                    stoploss: stockDetails.currentPrice,\n                                    target: stockDetails.currentPrice,\n                                  });\n                                  setResult({\n                                    quantity: 0,\n                                    buyCost: 0,\n                                    slCost: 0,\n                                    targetCost: 0,\n                                    expectedProfit: 0,\n                                    maximumLoss: 0,\n                                  });\n                                  setFreezeQty(false);\n                                  setValues({\n                                    buyPrice: stockDetails.currentPrice,\n                                    stoploss: stockDetails.currentPrice,\n                                    target: stockDetails.currentPrice,\n                                  });\n                                }}\n                              >\n                                Reset\n                              </Button>\n                            </div>\n                          }\n                          column={1}\n                          bordered\n                        >\n                          <Descriptions.Item label=\"Amount\">\n                            ₹{result.buyCost.toFixed(2)}\n                          </Descriptions.Item>\n                          <Descriptions.Item label=\"Expected Profit\">\n                            ₹{result.expectedProfit.toFixed(2)}\n                          </Descriptions.Item>\n                          <Descriptions.Item label=\"Maximum Loss\">\n                            ₹{result.maximumLoss.toFixed(2)}\n                          </Descriptions.Item>\n                        </Descriptions>\n                      )} */}\n                    </>\n                  );\n                }}\n              </Formik>\n            </Content>\n          </View>\n        )}\n      </Content>\n    </Container>\n  );\n};\n\nexport default StockDetailsHome;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Stocks from \"./stocks.component\";\nimport { AppContext } from \"../../providers/app.provider\";\nimport { getNotifications } from \"../../services/stock.service\";\nimport { Spinner } from \"native-base\";\n\nconst SwingStocks = () => {\n  const {\n    intradayStocks,\n    swingStocks,\n    setIntradayStocks,\n    selectedStock,\n    setSelectedStock,\n    setSwingStocks,\n  } = useContext(AppContext);\n\n  const [loading, setLoading] = useState(false);\n   \n  const fetchData = ()=>{\n    setLoading(true);\n    getNotifications(\"swing\").then((resp) => {\n      console.log(resp.data)\n      if (resp) {\n        setSwingStocks(resp.data);\n      }\n    }).finally(()=> setLoading(false));\n  }\n  \n    useEffect(() => {\n      fetchData();\n    }, []);\n\n\n  return  <>\n    {loading ?\n      <Spinner  color='blue'  />  : \n  <Stocks type=\"swing\"  stocks={swingStocks} fetchData={fetchData} />\n    }\n  </>;\n};\n\nexport default SwingStocks;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Stocks from \"./stocks.component\";\nimport { AppContext } from \"../../providers/app.provider\";\nimport { getNotifications } from \"../../services/stock.service\";\nimport { RefreshControl } from \"react-native\";\nimport { Spinner } from \"native-base\";\n\nconst IntradayLogs = () => {\n\n\n  const [stocks, setStocks] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n\n\n  const fetchData = () => {\n    setLoading(true);\n    getNotifications(\"priceaction\").then((resp) => {\n      console.log(resp.data)\n      if (resp) {\n        setStocks(resp.data);\n      }\n    }).finally(() => setLoading(false));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return <>\n    {loading ?\n      <Spinner color='blue' /> :\n      <Stocks stocks={stocks} fetchData={fetchData} />\n    }</>;\n};\n\nexport default IntradayLogs;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Header,\n  Content,\n  List,\n  ListItem,\n  Left,\n  Body,\n  Right,\n  Thumbnail,\n  Text,\n  Fab,\n  Icon,\n  Button,\n  View,\n  Card,\n  CardItem, Spinner\n} from \"native-base\";\nimport { getSlots, getSwingExecuteOut } from \"../../services/stock.service\";\nimport moment from \"moment\";\nexport default ({ route, navigation }: any) => {\n  const [loading, setLoading] = useState(false);\n  const [slots, setSlots]: any = useState([]);\n\n  let unsubscribe: any;\n  const fetchData = () => {\n    setLoading(true);\n    getSlots().then(x => {\n\n      setSlots(x);\n    }).finally(() => {\n      setLoading(false);\n    })\n  }\n  useEffect(() => {\n\n    unsubscribe = navigation.addListener(\n      'focus',\n      () => {\n        fetchData();\n      }\n    );\n\n    return unsubscribe;\n\n  }, [navigation])\n\n\n  const buttonStyle = {\n    margin: 10\n  }\n  const getSlotsCount = () => {\n    const noOfSlotsArr = slots && slots.map((x: any) => x.noOfSlots);\n    if (noOfSlotsArr && noOfSlotsArr.length) {\n      return noOfSlotsArr.reduce((x: number, y: number) => x + y)\n    }\n    return 0;\n  }\n  return (\n    <Container>\n      <View style={{ flex: 1 }}>\n        {loading ?\n          <Spinner color='blue' /> :\n          <>\n            <Card>\n              <CardItem header>\n                <Left>\n                  <Text style={{ fontSize: 20, color: 'royalblue' }}>Swings Slots</Text></Left>\n                <Right>\n                  <Text>\n                    Total Slots : {getSlotsCount()}/10\n                </Text>\n                </Right>\n              </CardItem>\n              <CardItem>\n\n                <Body>\n                  <Text>Balance Amount :₹{slots && slots.length && slots[0].balancedAmount.toFixed(2)}</Text>\n\n                </Body>\n              </CardItem>\n\n            </Card>\n            <Content>\n              <View style={{ flexDirection: \"row\", justifyContent: 'center', padding: 10, }}>\n                <Button\n                  style={buttonStyle}\n                  onPress={() => {\n                    navigation.navigate('SlotDetails')\n                  }}\n                >\n                  <Icon name=\"add\" />\n                </Button>\n                <Button\n                  style={buttonStyle}\n                  onPress={() => {\n                    navigation.navigate('SlotTransactions')\n                  }}\n                >\n                  <Text> Transactions</Text>\n                </Button>\n              </View>\n\n\n              <List>\n\n                {slots && slots.map((x: any) => <ListItem avatar key={x.symbol}>\n                  <Left>\n                    {/* <Thumbnail source={{ uri: \"Image URL\" }} /> */}\n                  </Left>\n                  <Body>\n                    <Text>{x.symbol}</Text>\n                    <Text note>\n                      Order Price:{x.orderPrice}\n                    </Text>\n                    <Text note>\n                      Invested Amount: {x.investedAmount.toFixed(2)}\n                    </Text>\n                    {x.noOfSlots > 1 &&\n                      <Text note style={{ color: \"orange\" }}>\n                        No of Slots:{x.noOfSlots}\n                      </Text>\n                    }\n                  </Body>\n                  <Right>\n\n                    <Text note>{moment(x.createdOn).format(\"DD/MM/YYYY hh:mm a\")}</Text>\n                    <Text note>\n                      Quantity:{x.qty}\n                    </Text>\n\n                    <Button onPress={() => {\n\n                      navigation.navigate('SlotDetails', { stock: x })\n\n                    }}><Text>Remove</Text></Button>\n\n                  </Right>\n                </ListItem>)}\n\n\n              </List>\n\n            </Content>\n          </>}\n\n      </View>\n    </Container>\n  );\n};\n","\nimport React, { useEffect, useState } from 'react';\nimport { Container, Header, Content, Form, Item, Input, Label, Button, Text, Toast, Spinner, CheckBox, Left } from 'native-base';\nimport { getSwingExecute, getSwingExecuteOut } from '../../services/stock.service';\n\nconst NewSlot = ({ navigation, route }: any) => {\n  const [state, setState] = useState({ symbol: \"\", orderPrice: \"\", force: false, forceQty: \"1\" });\n\n  const stock = route.params && route.params.stock || null;\n  useEffect(() => {\n    if (stock) {\n\n      setState({ ...stock })\n    }\n  }, [stock])\n  const [loading, setLoading] = useState(false);\n  return <Container>\n\n    <Content>\n      <Form >\n\n        <Item stackedLabel>\n          <Label>Symbol{state.orderPrice}</Label>\n          <Input value={state.symbol} onChangeText={(symbol) => setState({ ...state, symbol })} />\n        </Item>\n        <Item stackedLabel >\n          <Label>Order Price</Label>\n          <Input value={state.orderPrice.toString()} keyboardType=\"decimal-pad\" onChangeText={(orderPrice) =>\n\n            setState({ ...state, orderPrice })} />\n        </Item>\n        {!stock &&\n          <>\n            <Item   >\n              <Label>Force</Label>\n              <CheckBox checked={state.force} onPress={() => {\n                setState({ ...state, force: !state.force })\n              }} />\n\n            </Item>\n            {state.force &&\n              <Item stackedLabel last>\n                <Label>Quantity</Label>\n                <Input value={state.forceQty.toString()} keyboardType=\"number-pad\" onChangeText={(forceQty) =>\n\n                  setState({ ...state, forceQty })} />\n              </Item>\n            }\n          </>\n        }\n\n      </Form>\n      <Button style={{ alignSelf: \"center\", marginTop: 20 }} onPress={async () => {\n        setLoading(true);\n        if (stock) {\n          const res = await getSwingExecuteOut({ symbol: state.symbol, orderPrice: +state.orderPrice }).finally(() => setLoading(false));\n\n          const resCode = res.data.resCode;\n\n          if (resCode === \"EXECUTED\") {\n            navigation.navigate('Slots');\n\n            Toast.show({\n              text: 'Successfully removed.',\n              buttonText: 'Okay',\n              type: \"success\"\n            })\n          }\n\n          return;\n        }\n\n        const res = await getSwingExecute({ symbol: state.symbol, orderPrice: +state.orderPrice, force: state.force, forceQty: +state.forceQty }).finally(() => setLoading(false));;\n        const resCode = res.data.resCode;\n        if (resCode === \"SLOTS_ARE_FULL\") {\n          Toast.show({\n            text: 'Slots are full.',\n            buttonText: 'Okay',\n            type: \"warning\"\n          })\n        } else if (resCode === \"STOCK_ALREADY_EXISTS\") {\n          Toast.show({\n            text: 'Stocky already exists.',\n            buttonText: 'Okay',\n            type: \"warning\"\n          })\n\n        }\n        else if (resCode === \"AMOUNT_IS_NOT_AVAILABLE\") {\n          Toast.show({\n            text: 'Ammount is not availble',\n            buttonText: 'Okay',\n            type: \"warning\"\n          })\n\n        } else {\n          navigation.navigate('Slots');\n          Toast.show({\n            text: 'Successfully added.',\n            buttonText: 'Okay',\n            type: \"success\"\n          })\n        }\n      }}>\n        {loading &&\n          <Spinner color='white' style={{ marginLeft: 10 }} />}\n        <Text>Submit</Text>\n      </Button>\n\n    </Content>\n  </Container>\n}\n\nexport default NewSlot","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Header,\n  Content,\n  List,\n  ListItem,\n  Left,\n  Body,\n  Right,\n  Thumbnail,\n  Text,\n  Fab,\n  Icon,\n  Button,\n  View,\n  Card,\n  CardItem, Spinner\n} from \"native-base\";\nimport { getSlots, getSwingExecuteOut, getTransactions } from \"../../services/stock.service\";\nimport moment from \"moment\";\nexport default ({ route, navigation }: any) => {\n  const [trasactions, setTransactions]: any = useState([]);\n  const [loading, setLoading] = useState(false);\n  let unsubscribe: any;\n  const fetchData = () => { \n    setLoading(true);\n\n    getTransactions().then(x => {\n\n      setTransactions(x);\n    }).finally(()=>{\n      setLoading(false);\n    })\n  }\n  useEffect(() => {\n\n    unsubscribe = navigation.addListener(\n      'focus',\n      () => {\n        fetchData();\n      }\n    );\n\n    return unsubscribe;\n\n  }, [navigation])\n\n\n\n  return (\n    <Container>\n      <View style={{ flex: 1 }}>\n      {loading &&  \n      <Spinner  color='blue'  />}\n        <Content>\n\n          <List >\n            {trasactions && trasactions.length>0 && trasactions\n              .sort((x: any, y: any) => new Date(y.date).getTime() > new Date(x.date).getTime() ? 1 : -1)\n              .map((x: any) => <ListItem avatar key={x.symbol + x.type + x.qty + x.orderPrice + x.createdOn}>\n\n                <Left>{/* <Thumbnail source={{ uri: \"Image URL\" }} /> */}</Left>\n                <Body>\n                  <Text style={{ color: x.type === \"IN\" ? \"green\" : \"red\" }}>{x.symbol}</Text>\n                  <Text note>\n                    Type:{x.type}\n                  </Text>\n                  <Text note>\n                    Order Price:{x.orderPrice}\n                  </Text>\n                  {x.investedAmount && <Text note>\n                    Invested Amount: {x.investedAmount.toFixed(2)}\n                  </Text>}\n\n                  <Text note>\n                    Balanced Amount: {x.balancedAmount.toFixed(2)}\n                  </Text>\n\n                </Body>\n                <Right>\n\n                  <Text note>{moment(x.createdOn).format(\"DD/MM/YYYY hh:mm a\")}</Text>\n                  <Text note>\n                    Quantity:{x.qty}\n                  </Text>\n\n\n                </Right>\n\n              </ListItem>)}\n\n\n          </List>\n\n        </Content>\n\n      </View>\n    </Container>\n  );\n};\n","\nimport React ,{useEffect, useContext, useState}from 'react';\nimport { getConfig } from './src/services/stock.service';\nimport { AppContext } from './src/providers/app.provider';\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Home from './src/screens/home/home.component';\n\nimport StockDetails from \"./src/screens/stock-details/stock-details.component\";\nimport IntradayStocks from './src/components/intraday-stocks/intraday-stocks.component';\nimport SwingStocks from './src/components/intraday-stocks/swing-stocks.component';\nimport IntradayLogs from './src/components/intraday-stocks/intraday-log.component';\nimport SwingSlots from './src/screens/swing-slots/swing-slots.component';\nimport NewSlot from './src/screens/swing-slots/new-slot.component';\nimport Transactions from './src/screens/swing-slots/transactions.component';\n\n\nconst Stack = createStackNavigator();\nconst AppNavigation = ()=>{\n\n\n\n    const {setConfig} = useContext(AppContext)\n    useEffect(()=>{\n        getConfig().then(config=>{\n          setConfig(config)\n        })\n      },[])\n\n\n     return <NavigationContainer>\n            <Stack.Navigator  initialRouteName=\"Home\">\n              <Stack.Screen name=\"Home\" component={Home} />\n              <Stack.Screen name=\"Stock\" component={StockDetails} />\n              <Stack.Screen name=\"Intraday\" component={IntradayStocks} />\n              <Stack.Screen name=\"Swing\" component={SwingStocks} />\n              <Stack.Screen name=\"Logs\" component={IntradayLogs} />\n              <Stack.Screen name=\"Slots\" component={SwingSlots} />\n              <Stack.Screen name=\"SlotDetails\" component={NewSlot} />\n              <Stack.Screen name=\"SlotTransactions\" component={Transactions} />\n            </Stack.Navigator>\n          </NavigationContainer>\n\n}\n\nexport default AppNavigation;","import \"react-native-gesture-handler\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { AppLoading, Notifications } from \"expo\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as Font from \"expo-font\";\n\nimport AppProvider from \"./src/providers/app.provider\";\nimport PushNotifications from \"./src/components/push-notifications/push-notifications.component\";\nimport AppNavigation from \"./AppNavigation.component\";\nimport { Root, Spinner } from \"native-base\";\n\n\n\n\nexport default function App() {\n  const [isReady, setIsReady] = useState(false);\n \n  useEffect(() => {\n    Font.loadAsync({\n      Roboto: require(\"./node_modules/native-base/Fonts/Roboto.ttf\"),\n      Roboto_medium: require(\"./node_modules/native-base/Fonts/Roboto_medium.ttf\"),\n      ...Ionicons.font,\n    }).then((res) => {\n      setIsReady(true);\n    });\n  });\n\n\n \n\n  return (\n    <Root>\n      {!isReady ? (\n        <AppLoading />\n      ) : (\n        <AppProvider>\n       \n          <PushNotifications />\n            <AppNavigation/>\n        </AppProvider>\n      )}\n    </Root>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/nextwebps/expo-service-worker.js', { scope: '/nextwebps/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var map = {\n\t\"./af\": 311,\n\t\"./af.js\": 311,\n\t\"./ar\": 312,\n\t\"./ar-dz\": 313,\n\t\"./ar-dz.js\": 313,\n\t\"./ar-kw\": 314,\n\t\"./ar-kw.js\": 314,\n\t\"./ar-ly\": 315,\n\t\"./ar-ly.js\": 315,\n\t\"./ar-ma\": 316,\n\t\"./ar-ma.js\": 316,\n\t\"./ar-sa\": 317,\n\t\"./ar-sa.js\": 317,\n\t\"./ar-tn\": 318,\n\t\"./ar-tn.js\": 318,\n\t\"./ar.js\": 312,\n\t\"./az\": 319,\n\t\"./az.js\": 319,\n\t\"./be\": 320,\n\t\"./be.js\": 320,\n\t\"./bg\": 321,\n\t\"./bg.js\": 321,\n\t\"./bm\": 322,\n\t\"./bm.js\": 322,\n\t\"./bn\": 323,\n\t\"./bn.js\": 323,\n\t\"./bo\": 324,\n\t\"./bo.js\": 324,\n\t\"./br\": 325,\n\t\"./br.js\": 325,\n\t\"./bs\": 326,\n\t\"./bs.js\": 326,\n\t\"./ca\": 327,\n\t\"./ca.js\": 327,\n\t\"./cs\": 328,\n\t\"./cs.js\": 328,\n\t\"./cv\": 329,\n\t\"./cv.js\": 329,\n\t\"./cy\": 330,\n\t\"./cy.js\": 330,\n\t\"./da\": 331,\n\t\"./da.js\": 331,\n\t\"./de\": 332,\n\t\"./de-at\": 333,\n\t\"./de-at.js\": 333,\n\t\"./de-ch\": 334,\n\t\"./de-ch.js\": 334,\n\t\"./de.js\": 332,\n\t\"./dv\": 335,\n\t\"./dv.js\": 335,\n\t\"./el\": 336,\n\t\"./el.js\": 336,\n\t\"./en-au\": 337,\n\t\"./en-au.js\": 337,\n\t\"./en-ca\": 338,\n\t\"./en-ca.js\": 338,\n\t\"./en-gb\": 339,\n\t\"./en-gb.js\": 339,\n\t\"./en-ie\": 340,\n\t\"./en-ie.js\": 340,\n\t\"./en-il\": 341,\n\t\"./en-il.js\": 341,\n\t\"./en-in\": 342,\n\t\"./en-in.js\": 342,\n\t\"./en-nz\": 343,\n\t\"./en-nz.js\": 343,\n\t\"./en-sg\": 344,\n\t\"./en-sg.js\": 344,\n\t\"./eo\": 345,\n\t\"./eo.js\": 345,\n\t\"./es\": 346,\n\t\"./es-do\": 347,\n\t\"./es-do.js\": 347,\n\t\"./es-us\": 348,\n\t\"./es-us.js\": 348,\n\t\"./es.js\": 346,\n\t\"./et\": 349,\n\t\"./et.js\": 349,\n\t\"./eu\": 350,\n\t\"./eu.js\": 350,\n\t\"./fa\": 351,\n\t\"./fa.js\": 351,\n\t\"./fi\": 352,\n\t\"./fi.js\": 352,\n\t\"./fil\": 353,\n\t\"./fil.js\": 353,\n\t\"./fo\": 354,\n\t\"./fo.js\": 354,\n\t\"./fr\": 355,\n\t\"./fr-ca\": 356,\n\t\"./fr-ca.js\": 356,\n\t\"./fr-ch\": 357,\n\t\"./fr-ch.js\": 357,\n\t\"./fr.js\": 355,\n\t\"./fy\": 358,\n\t\"./fy.js\": 358,\n\t\"./ga\": 359,\n\t\"./ga.js\": 359,\n\t\"./gd\": 360,\n\t\"./gd.js\": 360,\n\t\"./gl\": 361,\n\t\"./gl.js\": 361,\n\t\"./gom-deva\": 362,\n\t\"./gom-deva.js\": 362,\n\t\"./gom-latn\": 363,\n\t\"./gom-latn.js\": 363,\n\t\"./gu\": 364,\n\t\"./gu.js\": 364,\n\t\"./he\": 365,\n\t\"./he.js\": 365,\n\t\"./hi\": 366,\n\t\"./hi.js\": 366,\n\t\"./hr\": 367,\n\t\"./hr.js\": 367,\n\t\"./hu\": 368,\n\t\"./hu.js\": 368,\n\t\"./hy-am\": 369,\n\t\"./hy-am.js\": 369,\n\t\"./id\": 370,\n\t\"./id.js\": 370,\n\t\"./is\": 371,\n\t\"./is.js\": 371,\n\t\"./it\": 372,\n\t\"./it-ch\": 373,\n\t\"./it-ch.js\": 373,\n\t\"./it.js\": 372,\n\t\"./ja\": 374,\n\t\"./ja.js\": 374,\n\t\"./jv\": 375,\n\t\"./jv.js\": 375,\n\t\"./ka\": 376,\n\t\"./ka.js\": 376,\n\t\"./kk\": 377,\n\t\"./kk.js\": 377,\n\t\"./km\": 378,\n\t\"./km.js\": 378,\n\t\"./kn\": 379,\n\t\"./kn.js\": 379,\n\t\"./ko\": 380,\n\t\"./ko.js\": 380,\n\t\"./ku\": 381,\n\t\"./ku.js\": 381,\n\t\"./ky\": 382,\n\t\"./ky.js\": 382,\n\t\"./lb\": 383,\n\t\"./lb.js\": 383,\n\t\"./lo\": 384,\n\t\"./lo.js\": 384,\n\t\"./lt\": 385,\n\t\"./lt.js\": 385,\n\t\"./lv\": 386,\n\t\"./lv.js\": 386,\n\t\"./me\": 387,\n\t\"./me.js\": 387,\n\t\"./mi\": 388,\n\t\"./mi.js\": 388,\n\t\"./mk\": 389,\n\t\"./mk.js\": 389,\n\t\"./ml\": 390,\n\t\"./ml.js\": 390,\n\t\"./mn\": 391,\n\t\"./mn.js\": 391,\n\t\"./mr\": 392,\n\t\"./mr.js\": 392,\n\t\"./ms\": 393,\n\t\"./ms-my\": 394,\n\t\"./ms-my.js\": 394,\n\t\"./ms.js\": 393,\n\t\"./mt\": 395,\n\t\"./mt.js\": 395,\n\t\"./my\": 396,\n\t\"./my.js\": 396,\n\t\"./nb\": 397,\n\t\"./nb.js\": 397,\n\t\"./ne\": 398,\n\t\"./ne.js\": 398,\n\t\"./nl\": 399,\n\t\"./nl-be\": 400,\n\t\"./nl-be.js\": 400,\n\t\"./nl.js\": 399,\n\t\"./nn\": 401,\n\t\"./nn.js\": 401,\n\t\"./oc-lnc\": 402,\n\t\"./oc-lnc.js\": 402,\n\t\"./pa-in\": 403,\n\t\"./pa-in.js\": 403,\n\t\"./pl\": 404,\n\t\"./pl.js\": 404,\n\t\"./pt\": 405,\n\t\"./pt-br\": 406,\n\t\"./pt-br.js\": 406,\n\t\"./pt.js\": 405,\n\t\"./ro\": 407,\n\t\"./ro.js\": 407,\n\t\"./ru\": 408,\n\t\"./ru.js\": 408,\n\t\"./sd\": 409,\n\t\"./sd.js\": 409,\n\t\"./se\": 410,\n\t\"./se.js\": 410,\n\t\"./si\": 411,\n\t\"./si.js\": 411,\n\t\"./sk\": 412,\n\t\"./sk.js\": 412,\n\t\"./sl\": 413,\n\t\"./sl.js\": 413,\n\t\"./sq\": 414,\n\t\"./sq.js\": 414,\n\t\"./sr\": 415,\n\t\"./sr-cyrl\": 416,\n\t\"./sr-cyrl.js\": 416,\n\t\"./sr.js\": 415,\n\t\"./ss\": 417,\n\t\"./ss.js\": 417,\n\t\"./sv\": 418,\n\t\"./sv.js\": 418,\n\t\"./sw\": 419,\n\t\"./sw.js\": 419,\n\t\"./ta\": 420,\n\t\"./ta.js\": 420,\n\t\"./te\": 421,\n\t\"./te.js\": 421,\n\t\"./tet\": 422,\n\t\"./tet.js\": 422,\n\t\"./tg\": 423,\n\t\"./tg.js\": 423,\n\t\"./th\": 424,\n\t\"./th.js\": 424,\n\t\"./tl-ph\": 425,\n\t\"./tl-ph.js\": 425,\n\t\"./tlh\": 426,\n\t\"./tlh.js\": 426,\n\t\"./tr\": 427,\n\t\"./tr.js\": 427,\n\t\"./tzl\": 428,\n\t\"./tzl.js\": 428,\n\t\"./tzm\": 429,\n\t\"./tzm-latn\": 430,\n\t\"./tzm-latn.js\": 430,\n\t\"./tzm.js\": 429,\n\t\"./ug-cn\": 431,\n\t\"./ug-cn.js\": 431,\n\t\"./uk\": 432,\n\t\"./uk.js\": 432,\n\t\"./ur\": 433,\n\t\"./ur.js\": 433,\n\t\"./uz\": 434,\n\t\"./uz-latn\": 435,\n\t\"./uz-latn.js\": 435,\n\t\"./uz.js\": 434,\n\t\"./vi\": 436,\n\t\"./vi.js\": 436,\n\t\"./x-pseudo\": 437,\n\t\"./x-pseudo.js\": 437,\n\t\"./yo\": 438,\n\t\"./yo.js\": 438,\n\t\"./zh-cn\": 439,\n\t\"./zh-cn.js\": 439,\n\t\"./zh-hk\": 440,\n\t\"./zh-hk.js\": 440,\n\t\"./zh-mo\": 441,\n\t\"./zh-mo.js\": 441,\n\t\"./zh-tw\": 442,\n\t\"./zh-tw.js\": 442\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 745;"],"sourceRoot":""}